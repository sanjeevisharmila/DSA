class Solution {
    public void backtrack(int[] nums,List<Integer>temp,List<List<Integer>>res,int ind)
    {
        
            res.add(new ArrayList<>(temp));
          
        for(int i=ind;i<nums.length;i++)
        {
            if(i>ind && nums[i]==nums[i-1])
            {
                continue;
            }
            temp.add(nums[i]);
            backtrack(nums,temp,res,i+1);
            temp.remove(temp.size()-1);
            
        }
    }
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>>res=new ArrayList<>();
        backtrack(nums,new ArrayList<>(),res,0);
        return res;
    }
}

time=O(2^n*n)
space=O(n)+O(2^n*n)
